package com.rsi.agp.dao.tables.admin;
// Generated by T-Systems

/*---------------------------------------------------------------*/
/* Modificaciones por la Petición 5385 (Cambio de Alcance 54046) */
/* Fecha: 07.11.2018                                             */
/* Resp. Modificación: Tatiana A.M (T-Systems)                   */
/*---------------------------------------------------------------*/

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.rsi.agp.core.webapp.util.StringUtils;
import com.rsi.agp.dao.tables.commons.Usuario;
import com.rsi.agp.dao.tables.poliza.Linea;
import com.rsi.agp.dao.tables.poliza.Poliza;

public class Colectivo implements java.io.Serializable {

	private static final long serialVersionUID = 4402216784780138868L;

	private Long id;
	private Tomador tomador;
	private Linea linea;
	private SubentidadMediadora subentidadMediadora;
	private String idcolectivo;
	private String nomcolectivo;
	private Character activo;
	private BigDecimal pctdescuentocol;
	private BigDecimal pctprimerpago;
	private Date fechaprimerpago;
	private BigDecimal pctsegundopago;
	private Date fechasegundopago;
	private String dc;
	private Date fechacambio;
	private Date fechaefecto;
	private Date fechabaja;
	private String cccEntidad;
	private String cccOficina;
	private String cccDc;
	private String cccCuenta;
	private String observaciones;
	private String iban;
	private Integer tipoDescRecarg;
	private BigDecimal pctDescRecarg;
	private Character envioIbanAgro;
	/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Inicio */
	private Integer estadoAgroseguro;
	private Date fechaEnvio;
	/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Fin */
	private Set<HistoricoColectivos> historicoColectivoses = new HashSet<HistoricoColectivos>(0);
	private Set<Usuario> usuarios = new HashSet<Usuario>(0);
	private Set<Poliza> polizas = new HashSet<Poliza>(0);

	private String esMediadora;
	private Integer isCRM;
	private String colectivoActivo;

	public Colectivo() {
		tomador = new Tomador();
		linea = new Linea();
		subentidadMediadora = new SubentidadMediadora();
	}

	public Colectivo(Long id, Tomador tomador, Linea linea) {
		this.id = id;
		this.tomador = tomador;
		this.linea = linea;
	}

	public Colectivo(Long id, Tomador tomador, Linea linea, String idcolectivo, String nomcolectivo,
			SubentidadMediadora subentidadMediadora, Character activo, BigDecimal pctdescuentocol,
			BigDecimal pctprimerpago, Date fechaprimerpago, BigDecimal pctsegundopago, Date fechasegundopago, String dc,
			Date fechacambio, Date fechaefecto, Date fechabaja, String cccEntidad, String cccOficina, String cccDc,
			String cccCuenta, String observaciones, Integer tipoDescRecarg, BigDecimal pctDescRecarg,
			Character envioIbanAgro, Integer estadoAgroseguro, Date fechaEnvio, Set<HistoricoColectivos> historicoColectivoses,
			Set<Usuario> usuarios, Set<Poliza> polizas, String iban) {
		this.id = id;
		this.tomador = tomador;
		this.linea = linea;
		this.subentidadMediadora = subentidadMediadora;
		this.idcolectivo = idcolectivo;
		this.dc = dc;
		this.nomcolectivo = nomcolectivo;
		this.activo = activo;
		this.pctdescuentocol = pctdescuentocol;
		this.pctprimerpago = pctprimerpago;
		this.fechaprimerpago = fechaprimerpago;
		this.pctsegundopago = pctsegundopago;
		this.fechasegundopago = fechasegundopago;
		this.fechacambio = fechacambio;
		this.fechaefecto = fechaefecto;
		this.fechabaja = fechabaja;
		this.cccEntidad = cccEntidad;
		this.cccOficina = cccOficina;
		this.cccDc = cccDc;
		this.cccCuenta = cccCuenta;
		this.observaciones = observaciones;
		this.iban = iban;
		this.tipoDescRecarg = tipoDescRecarg;
		this.pctDescRecarg = pctDescRecarg;
		this.envioIbanAgro = envioIbanAgro;
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Inicio */
		this.estadoAgroseguro = estadoAgroseguro;
		this.fechaEnvio = fechaEnvio;
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Fin */
		this.historicoColectivoses = historicoColectivoses;
		this.usuarios = usuarios;
		this.polizas = polizas;
	}

	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public Tomador getTomador() {
		return this.tomador;
	}

	public void setTomador(Tomador tomador) {
		this.tomador = tomador;
	}

	public Linea getLinea() {
		return this.linea;
	}

	public void setLinea(Linea linea) {
		this.linea = linea;
	}

	public SubentidadMediadora getSubentidadMediadora() {
		return this.subentidadMediadora;
	}

	public void setSubentidadMediadora(SubentidadMediadora subentidadMediadora) {
		this.subentidadMediadora = subentidadMediadora;
	}

	public String getIdcolectivo() {
		return this.idcolectivo;
	}

	public void setIdcolectivo(String idcolectivo) {
		this.idcolectivo = idcolectivo;
	}

	public String getNomcolectivo() {
		return this.nomcolectivo;
	}

	public void setNomcolectivo(String nomcolectivo) {
		this.nomcolectivo = nomcolectivo;
	}

	public Character getActivo() {
		return this.activo;
	}

	public void setActivo(Character activo) {
		this.activo = activo;
	}

	public BigDecimal getPctdescuentocol() {
		return this.pctdescuentocol;
	}

	public void setPctdescuentocol(BigDecimal pctdescuentocol) {
		this.pctdescuentocol = pctdescuentocol;
	}

	public BigDecimal getPctprimerpago() {
		return this.pctprimerpago;
	}

	public void setPctprimerpago(BigDecimal pctprimerpago) {
		this.pctprimerpago = pctprimerpago;
	}

	public Date getFechaprimerpago() {
		return this.fechaprimerpago;
	}

	public void setFechaprimerpago(Date fechaprimerpago) {
		this.fechaprimerpago = fechaprimerpago;
	}

	public BigDecimal getPctsegundopago() {
		return this.pctsegundopago;
	}

	public void setPctsegundopago(BigDecimal pctsegundopago) {
		this.pctsegundopago = pctsegundopago;
	}

	public Date getFechasegundopago() {
		return this.fechasegundopago;
	}

	public void setFechasegundopago(Date fechasegundopago) {
		/*
		 * final SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy"); if (null !=
		 * fechaprimerpago) { try { String fechaAux = sdf.format(fechaprimerpago);
		 * fechaprimerpago = sdf.parse(fechaAux); } catch (ParseException e) {
		 * e.printStackTrace(); } } this.fechaprimerpago = fechaprimerpago;
		 */
		this.fechasegundopago = fechasegundopago;
	}

	public String getDc() {
		return dc;
	}

	public void setDc(String dc) {
		this.dc = dc;
	}

	public String getEsMediadora() {
		return this.subentidadMediadora.getId().getCodentidad() + "-"
				+ this.subentidadMediadora.getId().getCodsubentidad();
	}

	public String getColectivoActivo() {
		if (this.activo == '1') {
			colectivoActivo = "SI";
		} else {
			colectivoActivo = "NO";
		}
		return colectivoActivo;
	}

	public void setColectivoActivo(String colectivoActivo) {
		this.colectivoActivo = colectivoActivo;
	}

	public Date getFechacambio() {
		return fechacambio;
	}

	public void setFechacambio(Date fechacambio) {
		this.fechacambio = fechacambio;
	}

	public Date getFechaefecto() {
		return fechaefecto;
	}

	public void setFechaefecto(Date fechaefecto) {
		this.fechaefecto = fechaefecto;
	}

	public Date getFechabaja() {
		return fechabaja;
	}

	public void setFechabaja(Date fechabaja) {
		this.fechabaja = fechabaja;
	}

	public String getCccEntidad() {
		return this.cccEntidad;
	}

	public void setCccEntidad(String cccEntidad) {
		this.cccEntidad = cccEntidad;
	}

	public String getCccOficina() {
		return this.cccOficina;
	}

	public void setCccOficina(String cccOficina) {
		this.cccOficina = cccOficina;
	}

	public String getCccDc() {
		return this.cccDc;
	}

	public void setCccDc(String cccDc) {
		this.cccDc = cccDc;
	}

	public String getCccCuenta() {
		return this.cccCuenta;
	}

	public void setCccCuenta(String cccCuenta) {
		this.cccCuenta = cccCuenta;
	}

	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}

	public String getIban() {
		return this.iban;
	}

	public void setIban(String iban) {
		this.iban = iban;
	}

	public Set<HistoricoColectivos> getHistoricoColectivoses() {
		return this.historicoColectivoses;
	}

	public void setHistoricoColectivoses(Set<HistoricoColectivos> historicoColectivoses) {
		this.historicoColectivoses = historicoColectivoses;
	}

	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}

	public Set<Poliza> getPolizas() {
		return this.polizas;
	}

	public void setPolizas(Set<Poliza> polizas) {
		this.polizas = polizas;
	}

	public Integer getIsCRM() {
		return isCRM;
	}

	public void setIsCRM(Integer isCRM) {
		this.isCRM = isCRM;
	}

	public Integer gettipoDescRecarg() {
		return tipoDescRecarg;
	}

	public void settipoDescRecarg(Integer tipoDescRecarg) {
		this.tipoDescRecarg = tipoDescRecarg;
	}

	public BigDecimal getpctDescRecarg() {
		return pctDescRecarg;
	}

	public void setpctDescRecarg(BigDecimal pctDescRecarg) {
		this.pctDescRecarg = pctDescRecarg;
	}

	/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Inicio */
	public Character getEnvioIbanAgro() {
		return this.envioIbanAgro;
	}

	public void setEnvioIbanAgro(Character envioIbanAgro) {
		this.envioIbanAgro = envioIbanAgro;
	}
	/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Fin */

	/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Inicio */
	
	public Integer getEstadoAgroseguro() {
		return estadoAgroseguro;
	}

	public void setEstadoAgroseguro(Integer estadoAgroseguro) {
		this.estadoAgroseguro = estadoAgroseguro;
	}

	public Date getFechaEnvio() {
		return fechaEnvio;
	}

	public void setFechaEnvio(Date fechaEnvio) {
		this.fechaEnvio = fechaEnvio;
	}
	
	/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Fin */

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((activo == null) ? 0 : activo.hashCode());
		result = prime * result + ((cccCuenta == null) ? 0 : cccCuenta.hashCode());
		result = prime * result + ((cccDc == null) ? 0 : cccDc.hashCode());
		result = prime * result + ((cccEntidad == null) ? 0 : cccEntidad.hashCode());
		result = prime * result + ((cccOficina == null) ? 0 : cccOficina.hashCode());
		result = prime * result + ((colectivoActivo == null) ? 0 : colectivoActivo.hashCode());
		result = prime * result + ((dc == null) ? 0 : dc.hashCode());
		result = prime * result + ((esMediadora == null) ? 0 : esMediadora.hashCode());
		result = prime * result + ((fechabaja == null) ? 0 : fechabaja.hashCode());
		result = prime * result + ((fechacambio == null) ? 0 : fechacambio.hashCode());
		result = prime * result + ((fechaefecto == null) ? 0 : fechaefecto.hashCode());
		result = prime * result + ((fechaprimerpago == null) ? 0 : fechaprimerpago.hashCode());
		result = prime * result + ((fechasegundopago == null) ? 0 : fechasegundopago.hashCode());
		result = prime * result + ((historicoColectivoses == null) ? 0 : historicoColectivoses.hashCode());
		result = prime * result + ((iban == null) ? 0 : iban.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((idcolectivo == null) ? 0 : idcolectivo.hashCode());
		result = prime * result + ((isCRM == null) ? 0 : isCRM.hashCode());
		result = prime * result + ((linea == null) ? 0 : linea.hashCode());
		result = prime * result + ((nomcolectivo == null) ? 0 : nomcolectivo.hashCode());
		result = prime * result + ((observaciones == null) ? 0 : observaciones.hashCode());
		result = prime * result + ((pctDescRecarg == null) ? 0 : pctDescRecarg.hashCode());
		result = prime * result + ((pctdescuentocol == null) ? 0 : pctdescuentocol.hashCode());
		result = prime * result + ((pctprimerpago == null) ? 0 : pctprimerpago.hashCode());
		result = prime * result + ((pctsegundopago == null) ? 0 : pctsegundopago.hashCode());
		result = prime * result + ((polizas == null) ? 0 : polizas.hashCode());
		result = prime * result + ((subentidadMediadora == null) ? 0 : subentidadMediadora.hashCode());
		result = prime * result + ((tipoDescRecarg == null) ? 0 : tipoDescRecarg.hashCode());
		/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Inicio */
		result = prime * result + ((envioIbanAgro == null) ? 0 : envioIbanAgro.hashCode());
		/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Fin */
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Inicio */
		result = prime * result + ((estadoAgroseguro == null) ? 0 : estadoAgroseguro.hashCode());
		result = prime * result + ((fechaEnvio == null) ? 0 : fechaEnvio.hashCode());
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Fin */
		result = prime * result + ((tomador == null) ? 0 : tomador.hashCode());
		result = prime * result + ((usuarios == null) ? 0 : usuarios.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Colectivo other = (Colectivo) obj;

		if (activo == null) {
			if (other.activo != null)
				return false;
		} else if (!activo.equals(other.activo))
			return false;

		if (StringUtils.isNullOrEmpty(cccCuenta)) {
			if (!StringUtils.isNullOrEmpty(other.cccCuenta))
				return false;
		} else if (!cccCuenta.equals(other.cccCuenta))
			return false;

		if (StringUtils.isNullOrEmpty(cccDc)) {
			if (!StringUtils.isNullOrEmpty(other.cccDc))
				return false;
		} else if (!cccDc.equals(other.cccDc))
			return false;

		if (StringUtils.isNullOrEmpty(cccEntidad)) {
			if (!StringUtils.isNullOrEmpty(other.cccEntidad))
				return false;
		} else if (!cccEntidad.equals(other.cccEntidad))
			return false;

		if (StringUtils.isNullOrEmpty(cccOficina)) {
			if (!StringUtils.isNullOrEmpty(other.cccOficina))
				return false;
		} else if (!cccOficina.equals(other.cccOficina))
			return false;

		if (StringUtils.isNullOrEmpty(dc)) {
			if (!StringUtils.isNullOrEmpty(other.dc))
				return false;
		} else if (!dc.equals(other.dc))
			return false;

		if (fechabaja == null) {
			if (other.fechabaja != null)
				return false;
		} else if (!fechabaja.equals(other.fechabaja))
			return false;
		if (fechacambio == null) {
			if (other.fechacambio != null)
				return false;
		} else if (!fechacambio.equals(other.fechacambio))
			return false;
		if (fechaefecto == null) {
			if (other.fechaefecto != null)
				return false;
		} else if (!fechaefecto.equals(other.fechaefecto))
			return false;
		if (fechaprimerpago == null) {
			if (other.fechaprimerpago != null)
				return false;
		} else if (!fechaprimerpago.equals(other.fechaprimerpago))
			return false;
		if (fechasegundopago == null) {
			if (other.fechasegundopago != null)
				return false;
		} else if (!fechasegundopago.equals(other.fechasegundopago))
			return false;

		if (StringUtils.isNullOrEmpty(iban)) {
			if (!StringUtils.isNullOrEmpty(other.iban))
				return false;
		} else if (!iban.equals(other.iban))
			return false;

		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;

		if (StringUtils.isNullOrEmpty(idcolectivo)) {
			if (!StringUtils.isNullOrEmpty(other.idcolectivo))
				return false;
		} else if (!idcolectivo.equals(other.idcolectivo))
			return false;

		if (StringUtils.isNullOrEmpty(nomcolectivo)) {
			if (!StringUtils.isNullOrEmpty(other.nomcolectivo))
				return false;
		} else if (!nomcolectivo.equals(other.nomcolectivo))
			return false;
		if (StringUtils.isNullOrEmpty(observaciones)) {
			if (!StringUtils.isNullOrEmpty(other.observaciones))
				return false;
		} else if (!observaciones.equals(other.observaciones))
			return false;
		if (pctDescRecarg == null) {
			if (other.pctDescRecarg != null)
				return false;
		} else if (!pctDescRecarg.equals(other.pctDescRecarg))
			return false;
		if (pctdescuentocol == null) {
			if (other.pctdescuentocol != null)
				return false;
		} else if (!pctdescuentocol.equals(other.pctdescuentocol))
			return false;
		if (pctprimerpago == null) {
			if (other.pctprimerpago != null)
				return false;
		} else if (!pctprimerpago.equals(other.pctprimerpago))
			return false;
		if (pctsegundopago == null) {
			if (other.pctsegundopago != null)
				return false;
		} else if (!pctsegundopago.equals(other.pctsegundopago))
			return false;

		if (tipoDescRecarg == null) {
			if (other.tipoDescRecarg != null)
				return false;
		} else if (!tipoDescRecarg.equals(other.tipoDescRecarg))
			return false;

		/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Inicio */
		if (envioIbanAgro == null) {
			if (other.envioIbanAgro != null)
				return false;
		} else if (!envioIbanAgro.equals(other.envioIbanAgro))
			return false;
		/* PTC. 5385 ** MODIF TAM (07.11.2018) ** Fin */
		
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Inicio */
		if (estadoAgroseguro == null) {
			if (other.estadoAgroseguro != null)
				return false;
		} else if (!estadoAgroseguro.equals(other.estadoAgroseguro))
			return false;
		if (fechaEnvio == null) {
			if (other.fechaEnvio != null)
				return false;
		} else if (!fechaEnvio.equals(other.fechaEnvio))
			return false;
		/* PTC. 78845 ** CAMPOS NUEVOS (28.02.2022) ** Fin */

		if (linea.getCodlinea() == null) {
			if (other.linea.getCodlinea() != null)
				return false;
		} else if (!linea.getCodlinea().equals(other.linea.getCodlinea()))
			return false;
		if (linea.getCodplan() == null) {
			if (other.linea.getCodplan() != null)
				return false;
		} else if (!linea.getCodplan().equals(other.linea.getCodplan()))
			return false;

		if (StringUtils.isNullOrEmpty(tomador.getId().getCiftomador())) {
			if (!StringUtils.isNullOrEmpty(tomador.getId().getCiftomador()))
				return false;
		} else if (!tomador.getId().getCiftomador().equals(other.tomador.getId().getCiftomador()))
			return false;

		if (tomador.getId().getCodentidad() == null) {
			if (tomador.getId().getCodentidad() != null)
				return false;
		} else if (!tomador.getId().getCodentidad().equals(other.tomador.getId().getCodentidad()))
			return false;

		if (subentidadMediadora.getId().getCodentidad() == null) {
			if (subentidadMediadora.getId().getCodentidad() != null)
				return false;
		} else if (!subentidadMediadora.getId().getCodentidad()
				.equals(other.subentidadMediadora.getId().getCodentidad()))
			return false;

		if (subentidadMediadora.getId().getCodsubentidad() == null) {
			if (subentidadMediadora.getId().getCodsubentidad() != null)
				return false;
		} else if (!subentidadMediadora.getId().getCodsubentidad()
				.equals(other.subentidadMediadora.getId().getCodsubentidad()))
			return false;

		return true;
	}

}
