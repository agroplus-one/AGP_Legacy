package com.rsi.agp.core.executor.gan;
// Generated by T-Systems


import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;

import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import org.xml.sax.SAXException;

import com.rsi.agp.core.executor.GenericXMLParser;
import com.rsi.agp.core.webapp.util.StringUtils;
import com.rsi.agp.dao.tables.cpl.gan.ReduccionEnesaCCAA;
import com.rsi.agp.dao.tables.cpl.gan.ReduccionEnesaCCAAId;

/**
 * Parser tabla 0438: Sistemas de Reducción a aplicar en Subvenciones de ENESA y CC.AA.
 * @author U029823
 *
 */
public class ReduccionEnesaCCAAXMLParser extends GenericXMLParser {
	
	public static void main(String[] args){
		
		//TEMPORAL
//		args = new String[4];
//		args[0] = "D:\\borrar\\SistemasReduccionSubvencionesEnesaCCAA.xml";
//		args[1] = "D:\\borrar\\SistemasReduccionSubvencionesEnesaCCAA.csv";
//		args[2] = "181";
//		args[3] = "null";
		//FIN TEMPORAL
		
		if (args.length != 4) {
			System.out.println("Usage: java " + ReduccionEnesaCCAAXMLParser.class.getName()
					+ " <XML that needs to be transformed>" + " <Output file>" + " <LineaseguroId>" + " <dateFormat>");
			System.exit(1);
		}
		try {
			ReduccionEnesaCCAAXMLParser parser = new ReduccionEnesaCCAAXMLParser();
			parser.setTagPrincipal(GenericXMLParser.TAG_RG);
			parser.procesarFichero(args[0], args[1], new Long(args[2]), args[3]);
		} catch (FileNotFoundException e) {
			System.out.println("Error al buscar el fichero el fichero de sistema de reducción " + e.getMessage());
			e.printStackTrace();
			System.exit(2);
		} catch (SAXException e) {
			System.out.println("Error al crear el XMLReader " + e.getMessage());
			e.printStackTrace();
			System.exit(3);
		} catch (IOException e) {
			System.out.println("Error de entrada/salida al parsear el fichero de sistema de reducción " + e.getMessage());
			e.printStackTrace();
			System.exit(4);
		} catch (XMLStreamException e) {
			System.out.println("Error al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(5);
		} catch (FactoryConfigurationError e) {
			System.out.println("Error al crear el parseador XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(6);
		} catch (Exception e) {
			System.out.println("Error indefinido al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(7);
		}
	}
	
	@Override
	protected String generaInsert(Object reg, String dateFormat) {

		ReduccionEnesaCCAA registro = (ReduccionEnesaCCAA)reg;
		String sql = "";
		sql += StringUtils.nullToString(registro.getId().getCodOrganismo()) + ";";
		sql += StringUtils.nullToString(registro.getId().getLineaseguroid()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodmodulo()) + ";";
		sql += StringUtils.nullToString(registro.getId().getGrupoNegocio()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodespecie()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodregimen()) + ";";
		sql += StringUtils.nullToString(registro.getId().getSistReduccion()) + ";";
		
		if(registro.getPorcSubvMax()!=null){
			sql +=	registro.getPorcSubvMax() + ";";
		}else{
			sql += ";";
		}
		
		if(registro.getLimiteSubv()!=null){
			sql +=	registro.getLimiteSubv() + ";";
		}else{
			sql += ";";
		}
		
		SimpleDateFormat sdf = new SimpleDateFormat(dateFormat, Locale.US);
		
		if (registro.getFechaDesde() != null){
			sql += sdf.format(registro.getFechaDesde()) + ";";
		}
		else{
			sql += ";";
		}
		
		if (registro.getFechaHasta() != null){
			sql += sdf.format(registro.getFechaHasta()) + ";";
		}
		else{
			sql += ";";
		}


		return sql;
	}

	@Override
	protected Object generaRegistro(Object actual, String tag, XMLStreamReader parser, int id, Long lineaseguroid) {

		ReduccionEnesaCCAA registro;
		ReduccionEnesaCCAAId idActual;
		
		if (actual == null){
			registro = new ReduccionEnesaCCAA();
			idActual = new ReduccionEnesaCCAAId();
			idActual.setLineaseguroid(lineaseguroid);
			registro.setId(idActual);
		}
		else{
			registro = (ReduccionEnesaCCAA) actual;
			idActual = registro.getId();
		}
		
		if (this.getTagPrincipal().equals(tag)){
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codOrg")).equals("")){
				idActual.setCodOrganismo(StringUtils.nullToString(parser.getAttributeValue(null, "codOrg").trim()).charAt(0));
			}

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "mod")).equals("")){
				idActual.setCodmodulo(StringUtils.nullToString(parser.getAttributeValue(null, "mod")).trim());
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "grupNeg")).equals("")){
				idActual.setGrupoNegocio(StringUtils.nullToString(parser.getAttributeValue(null, "grupNeg").trim()).charAt(0));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "esp")).equals("")){
				idActual.setCodespecie(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "esp"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "reg")).equals("")){
				idActual.setCodregimen(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "reg"))));
			}

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "sistRed")).equals("")){
				idActual.setSistReduccion(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "sistRed"))));
			}

			//subvMax
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "subvMax")).equals("")){
				registro.setPorcSubvMax(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "subvMax"))));
			}
			
			//limSubv
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "limSubv")).equals("")){
				registro.setLimiteSubv(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "limSubv"))));
			}
			
			SimpleDateFormat sdf2 = new SimpleDateFormat(GenericXMLParser.FORMATO_ORIGEN);
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "fechaDesde")).equals("")){
				try {
					registro.setFechaDesde(sdf2.parse(parser.getAttributeValue(null, "fechaDesde")));
				} catch (ParseException e) {
					registro.setFechaDesde(null);
				}
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "fechaHasta")).equals("")){
				try {
					registro.setFechaHasta(sdf2.parse(parser.getAttributeValue(null, "fechaHasta")));
				} catch (ParseException e) {
					registro.setFechaHasta(null);
				}
			}
		}

		return registro;
	}
}