package com.rsi.agp.core.executor.gan;
// Generated by T-Systems

import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;

import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import org.xml.sax.SAXException;

import com.rsi.agp.core.executor.GenericXMLParser;
import com.rsi.agp.core.webapp.util.StringUtils;
import com.rsi.agp.dao.tables.cpl.gan.FechaContratacion;
import com.rsi.agp.dao.tables.cpl.gan.FechaContratacionId;

/**
 * Parser tabla 0424: Fechas de contratación de Ganado
 * @author U029823
 *
 */
public class FechaContratacionXMLParser extends GenericXMLParser {
	
	public static void main(String[] args){
		
		//TEMPORAL
//		args = new String[4];
//		args[0] = "D:\\borrar\\FechasContratacionGanado.xml";
//		args[1] = "D:\\borrar\\FechasContratacionGanado.csv";
//		args[2] = "181";
//		args[3] = GenericXMLParser.formatoOrigen;
		//FIN TEMPORAL
		
		if (args.length != 4) {
			System.out.println("Usage: java " + FechaContratacionXMLParser.class.getName()
					+ " <XML that needs to be transformed>" + " <Output file>" + " <LineaseguroId>" + " <dateFormat>");
			System.exit(1);
		}
		try {
			FechaContratacionXMLParser parser = new FechaContratacionXMLParser();
			parser.setTagPrincipal(GenericXMLParser.TAG_RG);
			parser.procesarFichero(args[0], args[1], new Long(args[2]), args[3]);
		} catch (FileNotFoundException e) {
			System.out.println("Error al buscar el fichero el fichero de fechas de contratación de ganado " + e.getMessage());
			e.printStackTrace();
			System.exit(2);
		} catch (SAXException e) {
			System.out.println("Error al crear el XMLReader " + e.getMessage());
			e.printStackTrace();
			System.exit(3);
		} catch (IOException e) {
			System.out.println("Error de entrada/salida al parsear el fichero de fechas de contratación de ganado " + e.getMessage());
			e.printStackTrace();
			System.exit(4);
		} catch (XMLStreamException e) {
			System.out.println("Error al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(5);
		} catch (FactoryConfigurationError e) {
			System.out.println("Error al crear el parseador XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(6);
		} catch (Exception e) {
			System.out.println("Error indefinido al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(7);
		}
	}
	
	@Override
	protected String generaInsert(Object reg, String dateFormat) {
		SimpleDateFormat sdf = new SimpleDateFormat(dateFormat, Locale.US);
		FechaContratacion registro = (FechaContratacion)reg;
		String sql = "";
		sql += registro.getId().getLineaseguroid() + ";";
		sql += StringUtils.nullToString(registro.getId().getCodmodulo()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodtipocapital()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodespecie()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodregimen()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodgruporaza()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodtipoanimal()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodprovincia()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodcomarca()) + ";";
		sql += StringUtils.nullToString(registro.getId().getCodtermino()) + ";";
		sql += StringUtils.nullToString(registro.getId().getSubtermino()) + ";";
		
		if (registro.getFecContratIni() != null){
			sql += sdf.format(registro.getFecContratIni()) + ";";
		}else{
			sql += ";";
		}
		
		if (registro.getFecContratFin() != null){
			sql += sdf.format(registro.getFecContratFin()) + ";";
		}else{
			sql += ";";
		}
		
		if (registro.getFecUltimoDiaPago() != null){
			sql += sdf.format(registro.getFecUltimoDiaPago()) + ";";
		}else{
			sql += ";";
		}
		
		sql += StringUtils.nullToString(registro.getCodRiesgoCbtoEleCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodRiesgoCbtoEleRc()) + ";";
		sql += StringUtils.nullToString(registro.getRiesgoCbtoEleValor()) + ";";
		sql += StringUtils.nullToString(registro.getCodPeriodoGarantiasCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodPeriodoGarantiasRc()) + ";";
		sql += StringUtils.nullToString(registro.getValorPeriodoGarantias()) + ";";
	
		return sql;
	}

	@Override
	protected Object generaRegistro(Object actual, String tag, XMLStreamReader parser, int id, Long lineaseguroid) {
		SimpleDateFormat sdf2 = new SimpleDateFormat(GenericXMLParser.FORMATO_ORIGEN);
		
		FechaContratacion registro;
		FechaContratacionId idActual;
		
		if (actual == null){
			registro = new FechaContratacion();
			idActual = new FechaContratacionId();
			registro.setId(idActual);
		}
		else{
			registro = (FechaContratacion) actual;
			idActual = registro.getId();
		}
		
		if (this.getTagPrincipal().equals(tag)){
			
			idActual.setLineaseguroid(lineaseguroid);

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "mod")).equals("")){
				idActual.setCodmodulo(StringUtils.nullToString(parser.getAttributeValue(null, "mod")).trim());
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "tipCptal")).equals("")){
				idActual.setCodtipocapital(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "tipCptal"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "esp")).equals("")){
				idActual.setCodespecie(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "esp"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "reg")).equals("")){
				idActual.setCodregimen(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "reg"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "grupRaza")).equals("")){
				idActual.setCodgruporaza(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "grupRaza"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "tipAnim")).equals("")){
				idActual.setCodtipoanimal(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "tipAnim"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "prov").trim()).equals("")){
				idActual.setCodprovincia(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "prov"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "com")).equals("")){
				idActual.setCodcomarca(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "com"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "term")).equals("")){
				idActual.setCodtermino(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "term"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "sterm")).equals("")){
				idActual.setSubtermino(StringUtils.nullToString(parser.getAttributeValue(null, "sterm").trim()).charAt(0));
			}
			
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "fecICont")).equals("")){
				try {
					registro.setFecContratIni(sdf2.parse(parser.getAttributeValue(null, "fecICont")));
				} catch (ParseException e) {
					//registro.setFecContratIni(null);
				}
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "fecFCont")).equals("")){
				try {
					registro.setFecContratFin(sdf2.parse(parser.getAttributeValue(null, "fecFCont")));
				} catch (ParseException e) {
					//registro.setFecContratFin(null);
				}
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "uDPago")).equals("")){
				try {
					registro.setFecUltimoDiaPago(sdf2.parse(parser.getAttributeValue(null, "uDPago")));
				} catch (ParseException e) {
					//registro.setFecUltimoDiaPago(null);
				}
			}
			
		}else if(GenericXMLParser.TAG_RIESGO_CUBIERTO_ELEGIDO.equals(tag)){
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodRiesgoCbtoEleCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodRiesgoCbtoEleRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setRiesgoCbtoEleValor(StringUtils.nullToString(parser.getAttributeValue(null, "valor").trim()).charAt(0));
			}
			
			//PerGarant
		}else if(GenericXMLParser.TAG_PERIODO_GARANTIAS.equals(tag)){

			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodPeriodoGarantiasCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodPeriodoGarantiasRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setValorPeriodoGarantias(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "valor"))));
			}
		}
		
		registro.setId(idActual);
		
		return registro;
	}
}