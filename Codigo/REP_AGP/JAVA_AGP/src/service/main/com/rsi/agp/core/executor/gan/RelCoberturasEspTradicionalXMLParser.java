package com.rsi.agp.core.executor.gan;
// Generated by T-Systems


import java.io.FileNotFoundException;
import java.io.IOException;

import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import org.xml.sax.SAXException;

import com.rsi.agp.core.executor.GenericXMLParser;
import com.rsi.agp.core.webapp.util.StringUtils;
import com.rsi.agp.dao.tables.cpl.gan.RelCoberturasEspTradicional;
import com.rsi.agp.dao.tables.cpl.gan.RelCoberturasEspTradicionalId;

/**
 * Parser tabla 0440: Relación Coberturas Nuevo Sistema de Ganado con Opciones Seguro Tradicional
 * @author U029823
 *
 */
public class RelCoberturasEspTradicionalXMLParser extends GenericXMLParser {
	 
	public static void main(String[] args){
		
		//TEMPORAL
//		args = new String[4];
//		args[0] = "D:\\borrar\\RelacionCoberturasGanadoCrecienteFrenteTradicional.xml";
//		args[1] = "D:\\borrar\\RelacionCoberturasGanadoCrecienteFrenteTradicional.csv";
//		args[2] = "181";
//		args[3] = "null";
		//FIN TEMPORAL
		
		if (args.length != 4) {
			System.out.println("Usage: java " + RelCoberturasEspTradicionalXMLParser.class.getName()
					+ " <XML that needs to be transformed>" + " <Output file>" + " <LineaseguroId>" + " <dateFormat>");
			System.exit(1);
		}
		try {
			RelCoberturasEspTradicionalXMLParser parser = new RelCoberturasEspTradicionalXMLParser();
			parser.setTagPrincipal(GenericXMLParser.TAG_RG);
			parser.procesarFichero(args[0], args[1], new Long(args[2]), args[3]);
		} catch (FileNotFoundException e) {
			System.out.println("Error al buscar el fichero el fichero de relación Coberturas Nuevo " + e.getMessage());
			e.printStackTrace();
			System.exit(2);
		} catch (SAXException e) {
			System.out.println("Error al crear el XMLReader " + e.getMessage());
			e.printStackTrace();
			System.exit(3);
		} catch (IOException e) {
			System.out.println("Error de entrada/salida al parsear el fichero de relación Coberturas Nuevo " + e.getMessage());
			e.printStackTrace();
			System.exit(4);
		} catch (XMLStreamException e) {
			System.out.println("Error al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(5);
		} catch (FactoryConfigurationError e) {
			System.out.println("Error al crear el parseador XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(6);
		} catch (Exception e) {
			System.out.println("Error indefinido al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(7);
		}
	}
	
	@Override
	protected String generaInsert(Object reg, String dateFormat) {

		RelCoberturasEspTradicional registro = (RelCoberturasEspTradicional)reg;
		String sql = "";
		sql += registro.getId().getLineaseguroid() + ";";
		sql += StringUtils.nullToString(registro.getId().getCodmodulo()) + ";";
		sql += StringUtils.nullToString(registro.getCodAdaptExplot()) + ";";
		
		sql += StringUtils.nullToString(registro.getCodRiesgoCbtoEleCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodRiesgoCbtoEleRc()) + ";";
		sql += StringUtils.nullToString(registro.getRiesgoCbtoEleValor()) + ";";
		
		sql += StringUtils.nullToString(registro.getCodGarantizadoCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodGarantizadoRc()) + ";";
		sql += StringUtils.nullToString(registro.getValorGarantizado()) + ";";
		
		sql += StringUtils.nullToString(registro.getCodPeriodoGarantiasCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodPeriodoGarantiasRc()) + ";";
		sql += StringUtils.nullToString(registro.getValorPeriodoGarantias()) + ";";

		sql += StringUtils.nullToString(registro.getCodCalcIndemCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodCalcIndemRc()) + ";";
		sql += StringUtils.nullToString(registro.getValorCalcIndem()) + ";";
		
		sql += StringUtils.nullToString(registro.getCodLimIndemCpm()) + ";";
		sql += StringUtils.nullToString(registro.getCodLimIndemRc()) + ";";
		sql += StringUtils.nullToString(registro.getValorLimIndem()) + ";";

		sql += StringUtils.nullToString(registro.getCodPlanTrad()) + ";";
		sql += StringUtils.nullToString(registro.getCodLineaTrad()) + ";";
		sql += StringUtils.nullToString(registro.getOpcion()) + ";";

		return sql;
	}

	@Override
	protected Object generaRegistro(Object actual, String tag, XMLStreamReader parser, int id, Long lineaseguroid) {

		RelCoberturasEspTradicional registro;
		RelCoberturasEspTradicionalId idActual;
		
		if (actual == null){
			registro = new RelCoberturasEspTradicional();
			idActual = new RelCoberturasEspTradicionalId();
			registro.setId(idActual);
		}
		else{
			registro = (RelCoberturasEspTradicional) actual;
			idActual = registro.getId();
		}
		

		if (this.getTagPrincipal().equals(tag)){
			
			idActual.setLineaseguroid(lineaseguroid);
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "mod")).equals("")){
				idActual.setCodmodulo(StringUtils.nullToString(parser.getAttributeValue(null, "mod")).trim());
			}

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "adapRiesExp")).equals("")){
				registro.setCodAdaptExplot(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "adapRiesExp"))));
			}
			
		//RiesgCbtoEleg
		}else if(GenericXMLParser.TAG_RIESGO_CUBIERTO_ELEGIDO.equals(tag)){

			//cPMod
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodRiesgoCbtoEleCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			//codRCub
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodRiesgoCbtoEleRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			//valor
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setRiesgoCbtoEleValor(StringUtils.nullToString(parser.getAttributeValue(null, "valor")).charAt(0));
			}
				
		//Garant
		}else if(GenericXMLParser.TAG_GARANTIZADO.equals(tag)){

			//cPMod
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodGarantizadoCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			//codRCub
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodGarantizadoRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			//valor
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setValorGarantizado(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "valor"))));
			}
			
		//PerGarant
		}else if(GenericXMLParser.TAG_PERIODO_GARANTIAS.equals(tag)){

			//cPMod
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodPeriodoGarantiasCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			//codRCub
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodPeriodoGarantiasRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			//valor
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setValorPeriodoGarantias(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "valor"))));
			}
		
		//CalcIndem
		}else if(GenericXMLParser.TAG_CALCULO_INDEMNIZACION.equals(tag)){

			//cPMod
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodCalcIndemCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			//codRCub
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodCalcIndemRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			//valor
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setValorCalcIndem(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "valor"))));
			}
			
		}else if(GenericXMLParser.TAG_LIMITE_INDEMNIZACION.equals(tag)){

			//cPMod
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "cPMod")).equals("")){
				registro.setCodLimIndemCpm(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "cPMod"))));
			}
			
			//codRCub
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "codRCub")).equals("")){
				registro.setCodLimIndemRc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "codRCub"))));
			}
			
			//valor
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "valor")).equals("")){
				registro.setValorLimIndem(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "valor"))));
			}
			
		}else if(GenericXMLParser.TAG_DATOS_SEGURO_TRADICIONAL.equals(tag)){

			// Plan
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "plan")).equals("")){
				registro.setCodPlanTrad(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "plan"))));
			}
			
			// Línea
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "linea")).equals("")){
				registro.setCodLineaTrad(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "linea"))));
			}
			
			// Opc
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "opc")).equals("")){
				registro.setOpcion(StringUtils.nullToString(parser.getAttributeValue(null, "opc")).charAt(0));
			}
		}
		registro.setId(idActual);
		
		return registro;
	}
}