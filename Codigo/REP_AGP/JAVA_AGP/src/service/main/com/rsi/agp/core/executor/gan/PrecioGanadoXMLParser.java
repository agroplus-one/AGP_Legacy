package com.rsi.agp.core.executor.gan;
// Generated by T-Systems


import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Locale;

import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamReader;

import org.xml.sax.SAXException;

import com.rsi.agp.core.executor.GenericXMLParser;
import com.rsi.agp.core.webapp.util.StringUtils;
import com.rsi.agp.dao.tables.cgen.SistemaProduccion;
import com.rsi.agp.dao.tables.cgen.TipoCapital;
import com.rsi.agp.dao.tables.cgen.TipoCapitalConGrupoNegocio;
import com.rsi.agp.dao.tables.commons.Termino;
import com.rsi.agp.dao.tables.commons.TerminoId;
import com.rsi.agp.dao.tables.cpl.Modulo;
import com.rsi.agp.dao.tables.cpl.ModuloId;
import com.rsi.agp.dao.tables.cpl.gan.Especie;
import com.rsi.agp.dao.tables.cpl.gan.EspecieId;
import com.rsi.agp.dao.tables.cpl.gan.GruposRazas;
import com.rsi.agp.dao.tables.cpl.gan.GruposRazasId;
import com.rsi.agp.dao.tables.cpl.gan.PrecioGanado;
import com.rsi.agp.dao.tables.cpl.gan.PrecioGanadoId;
import com.rsi.agp.dao.tables.cpl.gan.RegimenManejo;
import com.rsi.agp.dao.tables.cpl.gan.RegimenManejoId;
import com.rsi.agp.dao.tables.cpl.gan.TiposAnimalGanado;
import com.rsi.agp.dao.tables.cpl.gan.TiposAnimalGanadoId;

/**
 * Parser tabla 0423: Precios de Ganado
 * @author U029823
 *
 */
public class PrecioGanadoXMLParser extends GenericXMLParser {
	
	public static void main(String[] args){
		
		//TEMPORAL
		//args = new String[4];
		//args[0] = "D:\\borrar\\PreciosGanado.xml";
		//args[1] = "D:\\borrar\\PreciosGanado.csv";
		//args[2] = "181";
		//args[3] = "d/MMM/yyyy";
		//FIN TEMPORAL
		
		if (args.length != 4) {
			System.out.println("Usage: java " + PrecioGanadoXMLParser.class.getName()
					+ " <XML that needs to be transformed>" + " <Output file>" + " <LineaseguroId>" + " <dateFormat>");
			System.exit(1);
		}
		try {
			PrecioGanadoXMLParser parser = new PrecioGanadoXMLParser();
			parser.setTagPrincipal(GenericXMLParser.TAG_RG);
			parser.procesarFichero(args[0], args[1], new Long(args[2]), args[3]);
		} catch (FileNotFoundException e) {
			System.out.println("Error al buscar el fichero el fichero de precios de ganado " + e.getMessage());
			e.printStackTrace();
			System.exit(2);
		} catch (SAXException e) {
			System.out.println("Error al crear el XMLReader " + e.getMessage());
			e.printStackTrace();
			System.exit(3);
		} catch (IOException e) {
			System.out.println("Error de entrada/salida al parsear el fichero de precios de ganado " + e.getMessage());
			e.printStackTrace();
			System.exit(4);
		} catch (XMLStreamException e) {
			System.out.println("Error al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(5);
		} catch (FactoryConfigurationError e) {
			System.out.println("Error al crear el parseador XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(6);
		} catch (Exception e) {
			System.out.println("Error indefinido al parsear el XML: " + e.getMessage());
			e.printStackTrace();
			System.exit(7);
		}
	}
	
	@Override
	protected String generaInsert(Object reg, String dateFormat) {
		SimpleDateFormat sdf = new SimpleDateFormat(dateFormat, Locale.US);
		PrecioGanado registro = (PrecioGanado)reg;
		String sql = "";
		sql += registro.getId().getId() + ";";
		sql += registro.getId().getLineaseguroid() + ";";
		sql += StringUtils.nullToString(registro.getModulo().getId().getCodmodulo()) + ";";

		if (registro.getFecValidezHasta() != null){
			sql += sdf.format(registro.getFecValidezHasta()) + ";";
		}else{
			sql += ";";
		}
		
		sql += StringUtils.nullToString(registro.getTipoCapital().getCodtipocapital()) + ";";
		sql += StringUtils.nullToString(registro.getEspecie().getId().getCodespecie()) + ";";
		sql += StringUtils.nullToString(registro.getRegimenManejo().getId().getCodRegimen()) + ";";
		sql += StringUtils.nullToString(registro.getGruposRazas().getId().getCodGrupoRaza()) + ";";
		sql += StringUtils.nullToString(registro.getTiposAnimalGanado().getId().getCodTipoAnimal()) + ";";
		sql += StringUtils.nullToString(registro.getTermino().getId().getCodprovincia()) + ";";
		sql += StringUtils.nullToString(registro.getTermino().getId().getCodcomarca()) + ";";
		sql += StringUtils.nullToString(registro.getTermino().getId().getCodtermino()) + ";";
		sql += StringUtils.nullToString(registro.getTermino().getId().getSubtermino()) + ";";
		sql += StringUtils.nullToString(registro.getCodControlOficialLechero()) + ";";
		sql += StringUtils.nullToString(registro.getCodPureza()) + ";";
		
		// Sistema de producción
		if (registro.getSistemaProduccion() != null) {
			sql += StringUtils.nullToString(registro.getSistemaProduccion().getCodsistemaproduccion());
		}
		sql +=  ";";
		
		sql += StringUtils.nullToString(registro.getCodIgpdoGanado()) + ";";
		sql += StringUtils.nullToString(registro.getCodGestora()) + ";";
		sql += StringUtils.nullToString(registro.getNumAnimalesAcumDesde()) + ";";
		sql += StringUtils.nullToString(registro.getNumAnimalesAcumHasta()) + ";";
		sql += StringUtils.nullToString(registro.getCodSistAlmacena()) + ";";
		sql += StringUtils.nullToString(registro.getCodExcepContrExc()) + ";";
		sql += StringUtils.nullToString(registro.getCodExcepContrPol()) + ";";
		sql += StringUtils.nullToString(registro.getCodTipoGanaderia()) + ";";
		sql += StringUtils.nullToString(registro.getCodAlojamiento()) + ";";
		sql += StringUtils.nullToString(registro.getCodDestino()) + ";";
		sql += StringUtils.nullToString(registro.getPrecioGanadoDesde()) + ";";
		sql += StringUtils.nullToString(registro.getPrecioGanadoHasta()) + ";";
		sql += StringUtils.nullToString(registro.getProdAnualMedia()) + ";";

		return sql;
	}

	@Override
	protected Object generaRegistro(Object actual, String tag, XMLStreamReader parser, int id, Long lineaseguroid) {
		SimpleDateFormat sdf2 = new SimpleDateFormat(GenericXMLParser.FORMATO_ORIGEN);
		PrecioGanado registro;
		if (actual == null){
			registro = new PrecioGanado();
			PrecioGanadoId precioId = new PrecioGanadoId();
			precioId.setLineaseguroid(lineaseguroid);
			precioId.setId(new Long(id));
			registro.setId(precioId);
			
			Termino termino = new Termino();
		    TerminoId terminoId = new TerminoId();
		    termino.setId(terminoId);
		    registro.setTermino(termino);
		}
		else{
			registro = (PrecioGanado) actual;
		}

		if (this.getTagPrincipal().equals(tag)){

			if (!StringUtils.nullToString(parser.getAttributeValue(null, "mod")).equals("")){
				Modulo modulo = new Modulo();
				ModuloId moduloId = new ModuloId();
				String codModulo = StringUtils.nullToString(parser.getAttributeValue(null, "mod")).trim();
				moduloId.setCodmodulo(codModulo);
				moduloId.setLineaseguroid(lineaseguroid);
				modulo.setId(moduloId);
				registro.setModulo(modulo);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "fecValH")).equals("")){
				try {
					registro.setFecValidezHasta(sdf2.parse(parser.getAttributeValue(null, "fecValH")));
				} catch (ParseException e) {
					//registro.setFecValidezHasta(null);
				}
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "tipCptal")).equals("")){
				TipoCapitalConGrupoNegocio tipoCapital = new TipoCapitalConGrupoNegocio();
				Long codTipoCapital = new Long(StringUtils.nullToString(parser.getAttributeValue(null, "tipCptal")));
				tipoCapital.setCodtipocapital(codTipoCapital);
				registro.setTipoCapital(tipoCapital);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "esp")).equals("")){
				Especie especie = new Especie();
				EspecieId especieId = new EspecieId();
				Long idEspecie = new Long(StringUtils.nullToString(parser.getAttributeValue(null, "esp")));
				especieId.setCodespecie(idEspecie);
				especie.setId(especieId);
				registro.setEspecie(especie);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "reg")).equals("")){
				RegimenManejo regimenManejo = new RegimenManejo();
				RegimenManejoId idRegimenManejo = new RegimenManejoId();
				Long codRegimenManejo = new Long(StringUtils.nullToString(parser.getAttributeValue(null, "reg")));
				idRegimenManejo.setCodRegimen(codRegimenManejo);
				regimenManejo.setId(idRegimenManejo);
				registro.setRegimenManejo(regimenManejo);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "grupRaza")).equals("")){
				GruposRazas gruposRazas = new GruposRazas();
				GruposRazasId gruposRazasId = new GruposRazasId();
				Long codGruposRazas = new Long(StringUtils.nullToString(parser.getAttributeValue(null, "grupRaza")));
				gruposRazasId.setCodGrupoRaza(codGruposRazas);
				gruposRazas.setId(gruposRazasId);
				registro.setGruposRazas(gruposRazas);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "tipAnim")).equals("")){
				TiposAnimalGanado tipoAnimal = new TiposAnimalGanado();
				TiposAnimalGanadoId tiposAnimalGanadoId = new TiposAnimalGanadoId();
				Long codTipoAnimal = new Long(StringUtils.nullToString(parser.getAttributeValue(null, "tipAnim")));
				tiposAnimalGanadoId.setCodTipoAnimal(codTipoAnimal);
				tipoAnimal.setId(tiposAnimalGanadoId);
				registro.setTiposAnimalGanado(tipoAnimal);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "prov").trim()).equals("")){
				BigDecimal codProvincia = new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "prov")));
				registro.getTermino().getId().setCodprovincia(codProvincia);
			}

			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "com")).equals("")){
				BigDecimal codComarca = new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "com")));
				registro.getTermino().getId().setCodcomarca(codComarca);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "term")).equals("")){
				BigDecimal codTermino = new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "term")));
				registro.getTermino().getId().setCodtermino(codTermino);
			}
			
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "sterm")).equals("")){
				Character subtermino = new Character(StringUtils.nullToString(parser.getAttributeValue(null, "sterm").trim()).charAt(0));
				registro.getTermino().getId().setSubtermino(subtermino);
			}
			
			//conOfiLec
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "conOfiLec")).equals("")){
				registro.setCodControlOficialLechero(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "conOfiLec"))));
			}
			
			//pureza
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "pureza")).equals("")){
				registro.setCodPureza(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "pureza"))));
			}
			
			//sisProd
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "sisProd")).equals("")){
				SistemaProduccion sp = registro.getSistemaProduccion();
				
				if(sp==null){
					sp = new SistemaProduccion(); 
				}
				sp.setCodsistemaproduccion(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "sisProd"))));
				registro.setSistemaProduccion(sp);
			}
			
			//igpDOGan
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "igpDOGan")).equals("")){
				registro.setCodIgpdoGanado(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "igpDOGan"))));
			}
			
			//gestora
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "gestora")).equals("")){
				registro.setCodGestora(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "gestora"))));
			}
			
			//nuAniDAcum
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "nuAniDAcum")).equals("")){
				registro.setNumAnimalesAcumDesde(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "nuAniDAcum"))));
			}
			
			//nuAniHAcum
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "nuAniHAcum")).equals("")){
				registro.setNumAnimalesAcumHasta(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "nuAniHAcum"))));
			}
			
			//sisAlm
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "sisAlm")).equals("")){
				registro.setCodSistAlmacena(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "sisAlm"))));
			}
			
			//excepConExc
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "excepConExc")).equals("")){
				registro.setCodExcepContrExc(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "excepConExc"))));
			}
			
			//excepConPol
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "excepConPol")).equals("")){
				registro.setCodExcepContrPol(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "excepConPol"))));
			}
			
			//tGanad
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "tGanad")).equals("")){
				registro.setCodTipoGanaderia(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "tGanad"))));
			}
			
			//aloja
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "aloja")).equals("")){
				registro.setCodAlojamiento(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "aloja"))));
			}
			
			//dest
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "dest")).equals("")){
				registro.setCodDestino(new Long(StringUtils.nullToString(parser.getAttributeValue(null, "dest"))));
			}
			
			//precD
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "precD")).equals("")){
				registro.setPrecioGanadoDesde(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "precD"))));
			}
			
			//precH
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "precH")).equals("")){
				registro.setPrecioGanadoHasta(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "precH"))));
			}
			//calPro
			if (!StringUtils.nullToString(parser.getAttributeValue(null, "calPro")).equals("")){
				registro.setProdAnualMedia(new BigDecimal(StringUtils.nullToString(parser.getAttributeValue(null, "calPro"))));
			}

		}

		return registro;
	}
}